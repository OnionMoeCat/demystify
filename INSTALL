Demystify Installation Requirements

This file describes how to setup your Linux environment in order to build
and run Demystify under Python3. The 7 things that need to be installed are:

Java 1.6 or later
Python 3.2
jpackage-utils 1.7.5 or later
ANTLR 3.5
antlr3 script (available in this repo in antlr3/)
python-progressbar 3.3
ANTLR Python3 runtime

The order isn't necessarily fixed but some things are dependent on others.

I ran through this list on a debian squeeze machine and recorded the commands
I used to install the components.

1) Java 1.6.0 runtime (or later)
Required to run ANTLR

Install using your package manager.

Installed on a debian squeeze machine:
    $ sudo apt-get install java-common
    $ sudo apt-get install openjdk-6-jdk

2) Python 3.2 or later (not Python 3.1!)
Required to run demystify

Install using your package manager or from python.org. Pick one.
I recommend using the package manager if possible.
(Since it's at least 2015, 3.4 might be your default.
 Don't install 3.2 in that case.)

a) Package manager
    Check that your package manager has python3.2 or later.
        $ sudo apt-get install python3.2
        $ python3 --version
        Python 3.2.3
    If the python3 symlink points at an older version than python3.2,
    you may wish to update that to point to python3.2, and use "python3"
    in place of python3.2.
        $ sudo rm /usr/bin/python3
        $ sudo ln -s python3.2 /usr/bin/python3

b) From python.org source (building source)
Note that installing from source will overwrite /usr/bin/python3 to be a symlink
to python3.2.
    $ wget python.org/ftp/python/3.2.3/Python-3.2.3.tgz
    $ tar xf Python-3.2.3.tgz
    $ cd Python-3.2.3/
    $ ./configure --prefix=/usr
    $ make
    $ sudo make install
    $ ls -l /usr/bin/python3*

3) jpackage-utils 1.7.5 (or later)
Required to use the antlr3 convenience script (5)

The RPM can be found at:
http://mirrors.dotsrc.org/jpackage/5.0/generic/free/repoview/jpackage-utils.html

Installed on a debian squeeze machine:
    $ wget mirrors.dotsrc.org/jpackage/5.0/generic/free/RPMS/jpackage-utils-5.0.0-2.jpp5.noarch.rpm
    $ sudo alien -k jpackage-utils-5.0.0-2.jpp5.noarch.rpm
    $ sudo dpkg -i jpackage-utils_5.0.0-2.jpp5_all.deb

On some machines (like the Debian machine I'm installing this on as I write
these helpful instructions), jpackage-utils will want to use a folder that
contains a bunch of symlinks, but the folder itself isn't created. Check to
see if /usr/lib/jvm-exports contains a folder named "java-6-openjdk", and if
not, create a symlink, via:
    $ sudo ln -s ../jvm/java-6-openjdk /usr/lib/jvm-exports/java-6-openjdk

(You should also check that /usr/lib/jvm/java-6-openjdk exists.)

In my most recent attempt to install this (with java 1.7, fedora 19), the
jpackage scripts gave errors because the folders /usr/share/java-1.7.0 and
/usr/lib/java-1.7.0 didn't exist. These can be empty, it'll still find the jars
place in /usr/share/java in the next step.

4) ANTLR 3.5
Required to generate the DemystifyParser

You will need a jar file from the ANTLR website. The jar files with "complete"
in the name contain everything you need. Put it in a location where jpackage
will find it, such as /usr/share/java.

    antlr-3.5-complete.jar
        Available at http://www.antlr3.org/download/

Installation:
    $ wget www.antlr3.org/download/antlr-3.5-complete.jar
    $ sudo mv antlr-3.5-complete.jar /usr/share/java

5) antlr3 script (from this repo, in antlr3/)
    Note that if any of the filenames in (4) are different, you'll need to
    edit the antlr3 script to indicate that.

    $ sudo cp antlr3/antlr3 /usr/bin/antlr3
    $ sudo chown root:root /usr/bin/antlr3

You can, instead of installing the antlr3 script in /usr/bin, copy it or put
a symlink to it in $HOME/bin, where it will work just as well (if $HOME/bin
is in your PATH).

======

At this point you should be able to run "antlr3" on the command line and get:
ANTLR Parser Generator  Version 3.5
usage: java org.antlr.Tool [args] file.g [file2.g file3.g ...]

If you don't, there was an issue installing something earlier:
    Can't find functions library, aborting
        jpackage-utils didn't install correctly
    Exception in thread "main" java.lang.NoClassDefFoundError: org/antlr/Tool
        Likely a classpath error. Change "exec" to "echo" in the antlr3
        script and run it again; this will output the command trying to be run.
        If it says "error: JVM_LIBDIR /usr/lib/jvm-exports/java-6-openjdk does
        not exist or is not a directory" where you'd expect the classpath, then
        see above for the jvm-exports workaround.
        If it says "JAVAVER_LIBDIR /usr/share/java-1.7.0 does not exist or is
        not a directory" then you also need to create that folder (and probably
        /usr/lib/java-1.7.0 as well). They can be empty folders, as above.
    Something else?
        Check that java 6 and jpackage-utils are actually installed?
        Maybe reinstall openjdk-6-jdk after jpackage-utils is installed.

======

6) python-progressbar2 (currently 3.3)

$ sudo apt-get install python3-pip
$ sudo pip3 install progressbar2

"progressbar" is the old version hosted on Google Code; "progressbar2" is
maintained on Github now: http://github.com/WoLpH/python-progressbar.

You can probably set it up by downloading from Github and running
    $ sudo python3 setup.py install

This (and the ANTLR runtime below) requires setuptools. Some distros may
already have it as part of python. If running:
    $ sudo python3 setup.py install
caused complaints about something in setuptools, you need setuptools.

Some distros might be able to just install it:
    $ sudo apt-get install python3-setuptools

And then try again:
    $ sudo python3 setup.py install

If that still doesn't work, remove distribute, setuptools, and easy_install
from your system: https://pypi.python.org/pypi/setuptools/0.9.8#uninstalling
and download https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py
and run it:
    $ sudo python3 ez_setup.py

It works when you can run:
    $ python3
    >>> import progressbar
    >>>
(i.e. with no errors)

7) ANTLR 3 Python3 runtime

This can be acquired either through the antlr.org website or through github.

a) From the website:
Download http://www.antlr.org/download/antlr-3.5.tar.gz and unpack it.
The Python3 runtime is in the runtime/Python3 directory, and can be installed
much like any other Python3 library.
    $ wget http://www.antlr3.org/download/antlr-3.5.tar.gz
    $ tar xf antlr-3.5.tar.gz
    $ cd antlr3-antlr-3.5/runtime/Python3
    $ sudo python3 setup.py install

b) From github (this may be more up-to-date):
Download or check out the github repo http://github.com/antlr/antlr3. Then,
from wherever you put the repo:
    $ cd antlr3/runtime/Python3
    $ sudo python3 setup.py install

Installing on debian squeeze:
    $ wget http://github.com/antlr/antlr3/tarball/master -O antlr3.tgz
    $ tar xf antlr3.tgz
    $ cd antlr-antlr3-8312471/runtime/Python3/
    $ sudo python3 setup.py install

Regardless of whether you did (a) or (b), it works when you can run:
    $ python3
    >>> import antlr3
    >>>
(i.e. with no errors)

======

At this point, you should be done installing all of Demystify's dependencies.
To see if it works, change into the grammar directory and run:
    $ antlr3 Demystify.g

If it works, you will get a bunch of warning(138)s that I haven't figured out
how to silence, then it will exit silently (this takes some time). If you ls
afterwards, you should see a lot of Demystify*.py and *.tokens files that
weren't there before.

Still with me? Go one directory level up and run:
    $ python3 demystify.py test

It should say "OK" several times as it runs each of the provided unit tests.
If so, hooray! Demystify is working on your machine, as evidenced by the
correctly parsing unit tests.

And that's all you need!
